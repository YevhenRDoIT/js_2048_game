{"version":3,"sources":["modules/Game.class.js","scripts/main.js"],"names":["Game","initialState","state","generateEmptyBoard","score","status","Array","fill","map","emptyCells","forEach","row","rowIndex","cell","colIndex","push","col","length","randomIndex","Math","floor","random","randomValue","moved","newRow","filter","value","i","toString","addRandomTile","reverse","moveLeft","transposeBoard","moveRight","board","_","isGameOver","some","start","module","exports","require","game","gameField","document","querySelector","gameScore","startButton","messageStart","messageWin","messageLose","updateUI","getState","innerHTML","fieldRow","createElement","fieldCell","classList","add","textContent","appendChild","getScore","updateMessages","toggle","getStatus","handleKeydown","e","key","moveUp","moveDown","addEventListener"],"mappings":"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","file":"main.5723ceed.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nclass Game {\n  constructor(initialState = null) {\n    this.state = initialState || this.generateEmptyBoard();\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  generateEmptyBoard() {\n    return Array(4)\n      .fill()\n      .map(() => Array(4).fill(0));\n  }\n\n  addRandomTile() {\n    const emptyCells = [];\n\n    this.state.forEach((row, rowIndex) => {\n      row.forEach((cell, colIndex) => {\n        if (cell === 0) {\n          emptyCells.push({ row: rowIndex, col: colIndex });\n        }\n      });\n    });\n\n    if (emptyCells.length > 0) {\n      const randomIndex = Math.floor(Math.random() * emptyCells.length);\n      const randomValue = Math.random() < 0.9 ? 2 : 4;\n      const { row, col } = emptyCells[randomIndex];\n\n      this.state[row][col] = randomValue;\n    }\n  }\n\n  moveLeft() {\n    let moved = false;\n\n    this.state = this.state.map((row) => {\n      let newRow = row.filter((value) => value !== 0);\n\n      for (let i = 0; i < newRow.length - 1; i++) {\n        if (newRow[i] === newRow[i + 1]) {\n          newRow[i] *= 2;\n          newRow[i + 1] = 0;\n          this.score += newRow[i];\n        }\n      }\n      newRow = newRow.filter((value) => value !== 0);\n\n      while (newRow.length < 4) {\n        newRow.push(0);\n      }\n\n      if (newRow.toString() !== row.toString()) {\n        moved = true;\n      }\n\n      return newRow;\n    });\n\n    if (moved) {\n      this.addRandomTile();\n    }\n  }\n\n  moveRight() {\n    this.state = this.state.map((row) => row.reverse());\n    this.moveLeft();\n    this.state = this.state.map((row) => row.reverse());\n  }\n\n  moveUp() {\n    this.state = this.transposeBoard(this.state);\n    this.moveLeft();\n    this.state = this.transposeBoard(this.state);\n  }\n\n  moveDown() {\n    this.state = this.transposeBoard(this.state);\n    this.moveRight();\n    this.state = this.transposeBoard(this.state);\n  }\n\n  transposeBoard(board) {\n    return board[0].map((_, colIndex) => board.map((row) => row[colIndex]));\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    if (this.status === 'win' || this.status === 'lose') {\n      return this.status;\n    }\n\n    return this.isGameOver() ? 'lose' : 'playing';\n  }\n\n  isGameOver() {\n    const canMove = this.state.some((row, rowIndex) =>\n      row.some((cell, colIndex) => {\n        if (cell === 0) {\n          return true;\n        }\n\n        if (colIndex < 3 && cell === this.state[rowIndex][colIndex + 1]) {\n          return true;\n        }\n\n        if (rowIndex < 3 && cell === this.state[rowIndex + 1][colIndex]) {\n          return true;\n        }\n\n        return false;\n      }),);\n\n    return !canMove;\n  }\n\n  start() {\n    this.state = this.generateEmptyBoard();\n    this.addRandomTile();\n    this.addRandomTile();\n    this.status = 'playing';\n    this.score = 0;\n  }\n\n  restart() {\n    this.start();\n  }\n}\n\nmodule.exports = Game;\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst gameField = document.querySelector('.game-field');\nconst gameScore = document.querySelector('.game-score');\nconst startButton = document.querySelector('.start');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nfunction updateUI() {\n  const state = game.getState();\n\n  gameField.innerHTML = '';\n\n  state.forEach((row) => {\n    const fieldRow = document.createElement('tr');\n\n    row.forEach((cell) => {\n      const fieldCell = document.createElement('td');\n\n      fieldCell.classList.add('field-cell');\n\n      if (cell > 0) {\n        fieldCell.classList.add(`field-cell--${cell}`);\n        fieldCell.textContent = cell;\n      }\n      fieldRow.appendChild(fieldCell);\n    });\n    gameField.appendChild(fieldRow);\n  });\n  gameScore.textContent = game.getScore();\n  updateMessages();\n}\n\nfunction updateMessages() {\n  messageStart.classList.toggle('hidden', game.getStatus() !== 'idle');\n  messageWin.classList.toggle('hidden', game.getStatus() !== 'win');\n  messageLose.classList.toggle('hidden', game.getStatus() !== 'lose');\n}\n\nfunction handleKeydown(e) {\n  switch (e.key) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    default:\n      return;\n  }\n  updateUI();\n}\n\nstartButton.addEventListener('click', () => {\n  game.start();\n  updateUI();\n  startButton.textContent = 'Restart';\n});\n\ndocument.addEventListener('keydown', handleKeydown);\n"]}